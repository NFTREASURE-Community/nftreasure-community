---
name: Devenv

# prettier-ignore
on:  # yamllint disable-line rule:truthy
  push:
    branches:
      - trunk

  pull_request:
    branches:
      - "trunk"
    paths:
      - .github/workflows/devenv.yaml
      - devenv.nix
      - devenv.yaml
      - devenv.lock
      - devenv/**

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

permissions:
  contents: write
  packages: write
  pull-requests: write
  statuses: write

env:
  # GitHub
  PROJECT: ${{ github.repository }}
  BRANCH_NAME_CURRENT: ${{ github.head_ref || github.ref_name }}
  BRANCH_NAME_DEFAULT: ${{ github.event.repository.default_branch }}

  # Nix
  NIXPKGS_ALLOW_UNFREE: 1

defaults:
  run:
    shell: bash

jobs:
  ##################################################
  # Test the Development environment shell
  ##################################################

  test:
    name: Test

    runs-on: ${{ matrix.os }}

    timeout-minutes: 60
    continue-on-error: false

    strategy:
      fail-fast: true
      matrix:
        os:
          - ubuntu-latest

    steps:
      - id: checkout_repository
        name: Checkout repository
        uses: actions/checkout@v4
        with:
          lfs: false
          submodules: recursive

      - id: install_nix
        name: "Install Nix ❄️"
        uses: cachix/install-nix-action@v30
        with:
          github_access_token: ${{ secrets.GITHUB_TOKEN }}
          enable_kvm: true

      - id: cachix
        name: "Enable Cachix ❄️"
        uses: cachix/cachix-action@v15
        if: vars.CACHIX_CACHE_NAME != ''
        with:
          name: ${{ vars.CACHIX_CACHE_NAME }}
          authToken: ${{ secrets.CACHIX_AUTH_TOKEN }}
          useDaemon: true
          skipPush: false

      - id: cache
        name: Magic Nix cache
        uses: DeterminateSystems/magic-nix-cache-action@main

      - id: devenv_install
        name: Devenv install
        run: |
          nix profile install --accept-flake-config nixpkgs#devenv

      - id: devenv_gc
        name: Devenv gc
        run: |
          devenv gc

      - id: devenv_test
        name: Devenv test
        run: |
          devenv test

      - id: devenv_status
        name: Devenv (status)
        if: always()
        shell: devenv shell --quiet bash -- -e {0}
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          if [[ ${{ steps.devenv_test.outcome }} == 'success' ]];
          then
            RESULT="success"
            DESCRIPTION="Devenv test passed"
          else
            RESULT="failure"
            DESCRIPTION="Devenv test failed"
          fi
          gh api \
            repos/${{ github.repository }}/statuses/${{ github.sha }} \
            -f state=${RESULT} \
            -f context="${{ github.workflow }}" \
            -f description="${DESCRIPTION}" \
            -f target_url="https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}" || {
              echo "Failed to report devenv status"; exit 1;
            }
